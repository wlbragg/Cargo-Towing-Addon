<?xml version="1.0"?>
<!--
Cargo Towing - Cargo Towing Addon for Flightgear
Written and developed by Wayne Bragg wlbragg
Copyright (C) 2020 Wayne Bragg
rope-dialog.xml
Version 1.0.0 beta 1/21/2020
Cargo Towing is licensed under the Gnu Public License v3+ (GPLv3+)
-->

<PropertyList>
	<name>rope-dialog</name>
	<layout>vbox</layout>
	<resizable>true</resizable>
	<default-padding>3</default-padding>

	<group>
		<layout>hbox</layout>
		<default-padding>1</default-padding>
		<empty><stretch>true</stretch></empty>
		<text>
			<label>Rope Positioning</label>
		</text>
		<empty><stretch>true</stretch></empty>
		<button>
			<legend></legend>
			<key>Esc</key>
			<pref-width>16</pref-width>
			<pref-height>16</pref-height>
			<border>2</border>
			<binding>
				<command>dialog-close</command>
			</binding>
		</button>
	</group>

	<hrule/>

	<nasal>
		<open><![CDATA[

            var dlgRoot = cmdarg();
            var DIALOG_ROOT  = "/sim/gui/dialogs/rope-dialog";

            # Fill in the rope diameter
            var ropesize = props.globals.getNode("sim/gui/dialogs/rope-dialog/settings/", 1).getChildren("diameter");

            var rdselect = gui.findElementByName(dlgRoot, "rdselect");
            forindex (var ropesize_index; ropesize) {
              var rd = ropesize[ropesize_index];
              var rd_id = "unknown";
                if ((rd.getNode("name") != nil) and (rd.getNode("name").getValue() != nil)) {
                  rd_id = rd.getNode("name").getValue() ~
                    " " ~ rd.getNode("size").getValue();
                }
                rdselect.getNode("value[" ~ ropesize_index ~ "]", 1).setValue(rd_id);
            }

            # Fill in the pre-configured aircraft names
            var aircraft = props.globals.getNode("sim/gui/dialogs/rope-dialog/settings", 1).getChildren("aircraft");

            var list = gui.findElementByName(dlgRoot, "list");
            forindex (var aircraft_index; aircraft) {
              var ac = aircraft[aircraft_index];
              var ac_id = "unknown";
                if ((ac.getNode("name") != nil) and (ac.getNode("name").getValue() != nil)) {
                  ac_id = ac.getNode("name").getValue() ~
                    " " ~ ac.getNode("x-pos").getValue() ~
                    " " ~ ac.getNode("y-pos").getValue() ~
                    " " ~ ac.getNode("z-pos").getValue() ~
                    " " ~ ac.getNode("offset").getValue() ~
                    " " ~ ac.getNode("loadpoint").getValue();
                }
                list.getNode("value[" ~ aircraft_index ~ "]", 1).setValue(ac_id);
            }

            # Cargo Hauling option
            var p = getprop("sim/gui/dialogs/aicargo-dialog/connection");
            setprop("/sim/model/aircrane/cargo_connection_flag_0", 0);
            setprop("/sim/model/aircrane/cargo_connection_flag_1", 0);
            setprop("/sim/model/aircrane/cargo_connection_flag_" ~ p, 1);

            # Long Line option
            p = getprop("sim/gui/dialogs/aicargo-dialog/longline");
            setprop("/sim/model/aircrane/longline_flag_0",0);
	        setprop("/sim/model/aircrane/longline_flag_1",0);
            setprop("/sim/model/aircrane/longline_flag_" ~ p, 1);

		]]></open>
		<close><![CDATA[
		]]></close>
	</nasal>

	<group>
		<layout>hbox</layout>
		<text>
			<label>Cargo Connection Type</label>
			<halign>left</halign>
		</text>
        <radio>
            <halign>right</halign>
            <label>Hard Docked</label>
            <property>sim/model/aircrane/cargo_connection_flag_0</property>
            <live>true</live>
            <enable>
                <and>
                    <not>
                        <property>/sim/freeze/replay-state</property>
                    </not>
                    <not>
                        <property>/sim/cargo/cargo-on-hook</property>
                    </not>
                </and>
            </enable>
            <binding>
                <command>nasal</command>
                <script>
                    var p = "sim/gui/dialogs/aicargo-dialog/connection";
                    setprop(p, var i = 0);
                    gui.popupTip("Cargo connection " ~ (i ? "Long Line" : "Hard Docked"));
                    setprop("sim/model/aircrane/cargo_connection_flag_0",1);
                    setprop("sim/model/aircrane/cargo_connection_flag_1",0);
                </script>
            </binding>
        </radio>
        <radio>
            <halign>right</halign>
            <label>Long Line</label>
            <property>sim/model/aircrane/cargo_connection_flag_1</property>
            <live>true</live>
            <enable>
                <and>
                    <not>
                        <property>/sim/freeze/replay-state</property>
                    </not>
                    <not>
                        <property>/sim/cargo/cargo-on-hook</property>
                    </not>
                </and>
            </enable>
            <binding>
                <command>nasal</command>
                <script>
                    var p = "sim/gui/dialogs/aicargo-dialog/connection";
                    setprop(p, var i = 1);
                    gui.popupTip("Cargo connection " ~ (i ? "Long Line" : "Hard Docked"));
                    setprop("sim/model/aircrane/cargo_connection_flag_0",0);
                    setprop("sim/model/aircrane/cargo_connection_flag_1",1);
                    setprop("sim/model/firetank/enabled", 0);
                </script>
            </binding>
        </radio>
    </group>

    <hrule/>

    <group>
        <layout>hbox</layout>
		<text>
			<label>Line Type</label>
			<halign>right</halign>
		</text>
        <radio>
            <halign>right</halign>
            <label>Rope</label>
            <property>sim/model/aircrane/longline_flag_0</property>
            <live>true</live>
            <enable>
                <and>
                    <not>
                        <property>/sim/freeze/replay-state</property>
                    </not>
                </and>
            </enable>
            <binding>
                <command>nasal</command>
                <script>
                    var p = "sim/gui/dialogs/aicargo-dialog/longline";
                    setprop(p, var i = 0);
                    gui.popupTip("Line type " ~ (i ? "Cable" : "Rope"));
                    setprop("sim/model/aircrane/longline_flag_0",1);
                    setprop("sim/model/aircrane/longline_flag_1",0);
                </script>
            </binding>
        </radio>
        <radio>
            <halign>right</halign>
            <label>Cable</label>
            <property>sim/model/aircrane/longline_flag_1</property>
            <live>true</live>
            <enable>
                <and>
                    <not>
                        <property>/sim/freeze/replay-state</property>
                    </not>
                </and>
            </enable>
            <binding>
                <command>nasal</command>
                <script>
                    var p = "sim/gui/dialogs/aicargo-dialog/longline";
                    setprop(p, var i = 1);
                    gui.popupTip("Line type " ~ (i ? "Cable" : "Rope"));
                    setprop("sim/model/aircrane/longline_flag_0",0);
                    setprop("sim/model/aircrane/longline_flag_1",1);
                </script>
            </binding>
        </radio>
    </group>

    <hrule/>

    <group>
        <layout>hbox</layout>
        <halign>left</halign>
        <default-padding>5</default-padding>
        <text>
            <halign>left</halign>
            <label>1) Select rope size</label>
        </text>
    </group>

    <group>
        <layout>hbox</layout>
        <halign>left</halign>
        <text>
            <halign>left</halign>
            <label>Rope Diameter</label>
        </text>

        <combo>
            <name>rdselect</name>
            <halign>left</halign>
            <property>/sim/gui/dialogs/rope-dialog/ropesize/rdselect</property>
            <pref-width>150</pref-width>
            <binding>
                <command>dialog-apply</command>
                <object-name>rdselect</object-name>
            </binding>
            <binding>
                <command>nasal</command>
                <script>
                    var rdparams = split(" ", getprop("/sim/gui/dialogs/rope-dialog/ropesize/rdselect"));
                    setprop("/sim/gui/dialogs/rope-dialog/settings/description", rdparams[0]);
                    setprop("/sim/gui/dialogs/rope-dialog/settings/size", rdparams[1]);

                    #setprop("/sim/gui/dialogs/rope-dialog/settings/x-pos", getprop("/sim/gui/dialogs/rope-dialog/settings/x-pos") * rdparams[1]);
                    #setprop("/sim/gui/dialogs/rope-dialog/settings/y-pos", getprop("/sim/gui/dialogs/rope-dialog/settings/y-pos") * rdparams[1]);
                    #setprop("/sim/gui/dialogs/rope-dialog/settings/z-pos", getprop("/sim/gui/dialogs/rope-dialog/settings/z-pos") *rdparams[1]);
                </script>
            </binding>
        </combo>
    </group>

    <hrule/>

    <group>
        <layout>hbox</layout>
        <halign>left</halign>
        <default-padding>5</default-padding>
        <text>
            <halign>left</halign>
            <label>2) Select from aircraft list then adjust sliders if needed</label>
        </text>
    </group>
    <group>
        <layout>hbox</layout>
        <group>
            <layout>vbox</layout>
            <halign>left</halign>
            <default-padding>0</default-padding>
            <list>
                <name>list</name>
                <pref-width>120</pref-width>
                <pref-height>160</pref-height>
                <halign>fill</halign>
                <valign>fill</valign>
                <stretch>true</stretch>
                <property>/sim/gui/dialogs/rope-dialog/aircraft/list</property>
                <binding>
                    <command>dialog-apply</command>
                    <object-name>list</object-name>
                </binding>
                <binding>
                    <command>nasal</command>
                    <script>
                        var posparams = split(" ", getprop("/sim/gui/dialogs/rope-dialog/aircraft/list"));
                        setprop("/sim/gui/dialogs/rope-dialog/settings/name", posparams[0]);
                        setprop("/sim/gui/dialogs/rope-dialog/settings/x-pos", posparams[1]);
                        setprop("/sim/gui/dialogs/rope-dialog/settings/y-pos", posparams[2]);
                        setprop("/sim/gui/dialogs/rope-dialog/settings/z-pos", posparams[3]);
                        setprop("/sim/gui/dialogs/rope-dialog/settings/offset", posparams[4]);
                        setprop("/sim/gui/dialogs/rope-dialog/settings/loadpoint", posparams[5]);

                        setprop("/sim/cargo/rope/offset", posparams[4]);
                    </script>
                </binding>
            </list>
        </group>
        <group>
            <layout>vbox</layout>
            <halign>left</halign>
            <text>
	            <halign>left</halign>
	            <label>x-pos</label>
            </text>
            <text>
	            <halign>left</halign>
	            <label>y-pos</label>
            </text>
            <text>
	            <halign>left</halign>
	            <label>z-pos</label>
            </text>
            <text>
	            <halign>left</halign>
	            <label>offset</label>
            </text>
        </group>

        <group>
            <layout>vbox</layout>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/x-pos</property>
                <format>%.03f</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/y-pos</property>
                <format>%.03f</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/z-pos</property>
                <format>%.03f</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/offset</property>
                <format>%.03f</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
        </group>

        <group>
            <layout>vbox</layout>
            <slider>
	            <name>x-pos</name>
	            <min>-5.0</min>
	            <max> 5.0</max>
	            <step> 0.0001</step>
	            <fraction>0.0001</fraction>
	            <live>true</live>
	            <property>/sim/gui/dialogs/rope-dialog/settings/x-pos</property>
	            <binding>
		            <command>dialog-apply</command>
		            <object-name>x-pos</object-name>
	            </binding>
            </slider>
            <slider>
	            <name>y-pos</name>
	            <enable>
		            <not>
			            <property>/sim/rendering/rembrandt/enabled</property>
		            </not>
	            </enable>
	            <min>-5.0</min>
	            <max> 5.0</max>
	            <step> 0.0001</step>
	            <fraction>0.0001</fraction>
	            <live>true</live>
	            <property>/sim/gui/dialogs/rope-dialog/settings/y-pos</property>
	            <binding>
		            <command>dialog-apply</command>
		            <object-name>y-pos</object-name>
	            </binding>
            </slider>
            <slider>
	            <name>z-pos</name>
	            <enable>
		            <not>
			            <property>/sim/rendering/rembrandt/enabled</property>
		            </not>
	            </enable>
	            <min>-5.0</min>
	            <max> 5.0</max>
	            <step> 0.0001</step>
	            <fraction>0.0001</fraction>
	            <live>true</live>
	            <property>/sim/gui/dialogs/rope-dialog/settings/z-pos</property>
	            <binding>
		            <command>dialog-apply</command>
		            <object-name>z-pos</object-name>
	            </binding>
            </slider>
            <slider>
	            <name>offset</name>
	            <enable>
		            <not>
			            <property>/sim/rendering/rembrandt/enabled</property>
		            </not>
	            </enable>
	            <min>-10.0</min>
	            <max> 10.0</max>
	            <step> 0.0001</step>
	            <fraction>0.0001</fraction>
	            <live>true</live>
	            <property>/sim/gui/dialogs/rope-dialog/settings/offset</property>
	            <binding>
		            <command>dialog-apply</command>
		            <object-name>offset</object-name>
	            </binding>
                <binding>
                    <command>nasal</command>
                    <script>
                        var offset = getprop("/sim/gui/dialogs/rope-dialog/settings/offset");
                        setprop("/sim/cargo/rope/offset", offset);
                    </script>
                </binding>
            </slider>
        </group>
	</group>
    <group>
        <layout>hbox</layout>
        <default-padding>2</default-padding>
       
        <group>
            <layout>vbox</layout>
            <halign>left</halign>
            <pref-width>50</pref-width>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/name</property>
                <format>%</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
        </group>
        <group>
            <layout>vbox</layout>
            <halign>left</halign>
            <pref-width>120</pref-width>
            <text>
                <halign>left</halign>
                <property>/sim/gui/dialogs/rope-dialog/settings/loadpoint</property>
                <format>%</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
        </group>
        <group>
            <layout>vbox</layout>
            <halign>left</halign>
            <pref-width>30</pref-width>
            <text>
                <halign>left</halign>
                <property>/sim/weight[4]/weight-lb</property>
                <format>%.00f</format>
                <live>true</live>
                <color>
                    <red>0.9</red>
                    <green>1</green>
                    <blue>0.2</blue>
                    <alpha>1</alpha>
                </color>
            </text>
        </group>
    </group>

    <hrule/>

    <!-- Button bar -->
    <group>
        <layout>hbox</layout>
        <empty>
            <stretch>true</stretch>
        </empty>
        <button>
            <legend>Close</legend>
            <binding>
                <command>dialog-close</command>
            </binding>
        </button>
        <empty>
            <stretch>true</stretch>
        </empty>
    </group>

</PropertyList>
